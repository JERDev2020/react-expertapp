{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGif","category","a","url","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","key","GifExpertApp","cate","propTypes","PropTypes","func","isRequired","ReactDOM","render","document","getElementById"],"mappings":"oMAGaA,EAAc,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAAiB,EACNC,mBAAS,IADH,mBACnCC,EADmC,KACvBC,EADuB,KAc/B,OACP,sBAAMC,SATS,SAACC,GAChBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAY,SAAAS,GAAG,OAAGP,GAAH,mBAAiBO,OACjCN,EAAc,MAKjB,SAEE,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAlBkB,SAACP,GAErBF,EAAcE,EAAEQ,OAAOF,a,+CCPlBG,EAAM,uCAAC,WAAMC,GAAN,uBAAAC,EAAA,6DACVC,EADU,0DAC6CF,EAD7C,sDAEAG,MAAMD,GAFN,cAEZE,EAFY,gBAGCA,EAAKC,OAHN,uBAGXC,EAHW,EAGXA,KAEHC,EAAKD,EAAKE,KAAI,SAACC,GACrB,MAAM,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVT,IAAIO,EAAIG,OAAOC,iBAAiBX,QATf,kBAcbK,GAda,4CAAD,sDCENO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMT,EAAS,EAATA,IAE/B,OACI,sBAAKa,UAAU,kDAAf,UACI,qBAAKC,IAAKd,IACV,4BAAIS,QCDHM,EAAU,SAAC,GAAgB,IAAfjB,EAAc,EAAdA,SAAc,ECHX,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BoB,KAAK,GACLY,SAAQ,IAH0B,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OAVAC,qBAAU,WAENtB,EAAOC,GAAUsB,MAAK,SAAAb,GAAG,OAAEW,EAAS,CAChCd,KAAKG,EACLS,SAAQ,SAGd,CAAClB,IAGImB,EDJeI,CAAavB,GAA7BM,EAT6B,EAS7BA,KAAMY,EATuB,EASvBA,QACZ,OACI,qCACC,oBAAIH,UAAU,6CAAd,SAA4Df,IAE3DkB,GAAS,oBAAIH,UAAU,8CAAd,sBACX,qBAAKA,UAAU,WAAf,SAMQT,EAAKE,KAAI,SAACC,GAAD,OACN,wBAAC,EAAD,2BAAiBA,GAAjB,IAAsBe,IAAKf,EAAIC,eEvBrCe,EAAe,WAAO,IAAD,EAGEvC,mBAAS,CAAC,SAHZ,mBAGvBc,EAHuB,KAGbf,EAHa,KAY9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,YAAaA,IAC1B,uBACA,6BACIe,EAASQ,KAAI,SAAAkB,GAAI,OACjB,cAAC,EAAD,CAAS1B,SAAU0B,GAAWA,YAW9C1C,EAAY2C,UAAU,CAClB1C,YAAY2C,IAAUC,KAAKC,Y,MC9B/BC,IAASC,OACT,cAAC,EAAD,IACEC,SAASC,eAAe,W","file":"static/js/main.98b497b9.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport GifExpertApp from '../GifExpertApp'\r\n\r\nexport const AddCategory = ({setCategory}) => {\r\n    const [inputValue, setinputValue] = useState('');\r\n    const handleInputChange=(e)=>{\r\n        \r\n        setinputValue(e.target.value);\r\n    }\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n            setCategory(cat=>[inputValue,...cat]);\r\n           setinputValue('');\r\n        }\r\n      \r\n           }\r\n               return (\r\n        <form onSubmit={handleSubmit}>\r\n        \r\n          <input \r\n          type=\"text\" \r\n          value={inputValue}\r\n          onChange={handleInputChange}\r\n          \r\n          />\r\n          \r\n        </form>\r\n    )\r\n}\r\n","export const getGif=async(category)=>{\r\n    const url=`https://api.giphy.com/v1/gifs/search?limit=10&q=${category}&api_key=FttVsFkk38UkR6csEWFgZqqfIEEt9BtP`\r\n  const resp= await fetch(url);\r\n  const {data}=await resp.json();\r\n\r\nconst gifs=data.map((img)=>{\r\nreturn{\r\n   id:img.id,\r\n   title:img.title,\r\n   url:img.images.downsized_medium.url\r\n\r\n}\r\n\r\n})\r\nreturn gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n   \r\n    return (\r\n        <div className='card animate__animated animate__animate__rollIn'>\r\n            <img src={url}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState,useEffect} from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n// import { getGif } from '../helpers/GetGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n// import moduleName from '../GifExpertApp'\r\n\r\nexport const GifGrid = ({category}) => {\r\n//con el siguiente codigo soluciono el echo de que se llaman muchas veces a una api, \r\n//funciona como un didmount\r\n//     useEffect(()=>{\r\n//         getGif({category}).then(setimages)\r\n\r\n//     },[category]);\r\n//    const [images, setimages] = useState([])\r\n   \r\n   const {data, loading}= useFetchGifs(category);\r\n    return (\r\n        <>\r\n         <h3 className='animate__animated animate__animate__rollIn'>{category}</h3>\r\n\r\n         {loading&&<h2 className='animate__animated animate__animate__flasher'>Cargando</h2>}\r\n        <div className='cardGrid'>\r\n\r\n           \r\n\r\n          \r\n            {\r\n                data.map((img)=>(\r\n                   <GifGridItem {...img} key={img.id}></GifGridItem>\r\n\r\n                ))\r\n            } \r\n          \r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGif } from \"../helpers/GetGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(()=>{\r\n\r\n        getGif(category).then(img=>setstate({\r\n            data:img,\r\n            loading:false\r\n        }))\r\n\r\n    },[category])\r\n\r\n    \r\n    return state;\r\n}\r\n    ","import React,{useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport PropTypes from 'prop-types'\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    \r\n\r\n    const [category, setCategory] = useState([\"Goku\"]);\r\n\r\n    // const handleAdd=()=>{\r\n    //     setCategory([...category,\"Hunter\"])\r\n\r\n\r\n    // }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategory={setCategory}/>\r\n            <hr/>\r\n            <ol>{\r\n                category.map(cate=>(\r\n                <GifGrid category={cate} key={cate}/>\r\n\r\n                ))\r\n            }\r\n            </ol>\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\nAddCategory.propTypes={\r\n    setCategory:PropTypes.func.isRequired\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n<GifExpertApp/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}